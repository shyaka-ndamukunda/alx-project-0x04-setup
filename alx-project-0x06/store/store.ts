// src/store/store.ts
import { configureStore, createSlice } from "@reduxjs/toolkit";
import { useDispatch } from "react-redux";

// Define the initial state for the counter slice
const counterSlice = createSlice({
  name: 'counter', // Name of the slice
  initialState: {
    value: 0 // Initial value of the counter
  },
  reducers: {
    // Reducer to increment the counter
    increment: (state) => {
      state.value += 1;
    },
    // Reducer to decrement the counter, ensuring it doesn't go below 0
    decrement: (state) => {
      state.value = state.value > 0 ? state.value - 1 : 0;
    }
  }
});

// Configure the Redux store
const store = configureStore({
  reducer: {
    counter: counterSlice.reducer // Add the counter slice reducer to the store
  }
});

// Export the actions generated by createSlice
export const { increment, decrement } = counterSlice.actions;

// Define RootState type based on the store's state
export type RootState = ReturnType<typeof store.getState>;
// Define AppDispatch type based on the store's dispatch method
export type AppDispatch = typeof store.dispatch;

// Custom hook to use AppDispatch, providing type safety for dispatch actions
export const useAppDispatch = () => useDispatch<AppDispatch>();

export default store;